// <auto-generated />
using System;
using DesafioBack.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DesafioBack.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210328144821_DesafioBack")]
    partial class DesafioBack
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DesafioBack.Domain.Domains.Parcela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Numero")
                        .HasColumnType("int")
                        .HasColumnName("numero");

                    b.Property<int>("TituloId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor");

                    b.Property<DateTime>("Vencimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("vencimento")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.HasIndex("TituloId");

                    b.ToTable("parcela");
                });

            modelBuilder.Entity("DesafioBack.Domain.Domains.Titulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("CHAR(11)")
                        .HasColumnName("cpf");

                    b.Property<decimal>("Juros")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("juros");

                    b.Property<decimal>("Multa")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("multa");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("nome");

                    b.Property<long>("Numero")
                        .HasColumnType("bigint")
                        .HasColumnName("numero");

                    b.Property<int>("QuantidadeParcelas")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorAtualizado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .HasDatabaseName("idx_titulo_cpf");

                    b.ToTable("titulo");
                });

            modelBuilder.Entity("DesafioBack.Domain.Domains.Parcela", b =>
                {
                    b.HasOne("DesafioBack.Domain.Domains.Titulo", "Titulo")
                        .WithMany("Parcelas")
                        .HasForeignKey("TituloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Titulo");
                });

            modelBuilder.Entity("DesafioBack.Domain.Domains.Titulo", b =>
                {
                    b.Navigation("Parcelas");
                });
#pragma warning restore 612, 618
        }
    }
}
